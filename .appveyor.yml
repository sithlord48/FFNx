# .appveyor.yml

# Build version
version: '1.7.1.{build}'

# Use the latest available toolchain
image: Visual Studio 2019

# fetch repository as zip archive
shallow_clone: true

# PRs do not increment the build number
pull_requests:
  do_not_increment_build_number: true

# Build configurations
configuration: RelWithDebInfo

# Default environment variables
environment:
  _IS_BUILD_CANARY: false
  _RELEASE_NAME: FFNx
  _RELEASE_VERSION: v0
  # Use Python 3.x
  PYTHON: "C:\\Python38-x64"
  PYTHON_VERSION: "3.8.x"
  PYTHON_ARCH: "64"

# Prepare Cpp environment
before_build:
  - cmd: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
      set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq "true" -and $env:APPVEYOR_REPO_TAG_NAME) {
        $env:APPVEYOR_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION.Substring(0,$env:APPVEYOR_BUILD_VERSION.LastIndexOf('.')) + ".0"
        $env:_RELEASE_VERSION = "v" + $env:APPVEYOR_BUILD_VERSION
      } else {
        $env:_RELEASE_VERSION = "Canary"
        $env:APPVEYOR_REPO_TAG_NAME = "canary"
        $env:_IS_BUILD_CANARY = "true"
      }

build_script:
  - cmd: |
      md .dist\build\x86-RelWithDebInfo
      cd .dist/build/x86-RelWithDebInfo
      cmake -G "Visual Studio 16 2019" -A Win32 -D_DLL_VERSION="%appveyor_build_version%" -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DCMAKE_BINARY_DIR=".dist/build/x86-RelWithDebInfo" --config RelWithDebInfo ../../..
      cmake --build . --config RelWithDebInfo
      cd ../../..

after_build:
  - cmd: |
      md .dist\pkg\FF7_1998
      md .dist\pkg\FF8_2000
      md .dist\pkg\FFNx_Steam
      cp -R .dist/build/x86-RelWithDebInfo/bin/* .dist/pkg/FF7_1998
      cp -R .dist/build/x86-RelWithDebInfo/bin/* .dist/pkg/FF8_2000
      cp -R .dist/build/x86-RelWithDebInfo/bin/* .dist/pkg/FFNx_Steam
      rm .dist/pkg/FF7_1998/FF8.reg
      rm .dist/pkg/FF8_2000/FF7.reg
      rm .dist/pkg/FFNx_Steam/FF7.reg
      rm .dist/pkg/FFNx_Steam/FF8.reg
      rm .dist/pkg/FF7_1998/eax.dll
      rm .dist/pkg/FFNx_Steam/eax.dll
      mv .dist/pkg/FF7_1998/FF7.reg .dist/pkg/FF7_1998/FFNx.reg
      mv .dist/pkg/FF8_2000/FF8.reg .dist/pkg/FF8_2000/FFNx.reg
      mv .dist/pkg/FFNx_Steam/FFNx.dll .dist/pkg/FFNx_Steam/AF3DN.P

# Do not run unit tests
test: off

# Package artifacts
artifacts:
  - path: .dist\pkg\FF7_1998
    name: ${_RELEASE_NAME}-FF7_1998-${_RELEASE_VERSION}
    type: zip
  - path: .dist\pkg\FF8_2000
    name: ${_RELEASE_NAME}-FF8_2000-${_RELEASE_VERSION}
    type: zip
  - path: .dist\pkg\FFNx_Steam
    name: ${_RELEASE_NAME}-Steam-${_RELEASE_VERSION}
    type: zip

# Create a GitHub release for every tag
deploy:
  # Deploy only when new tags are pushed
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME}-${_RELEASE_VERSION}
    artifact: ${_RELEASE_NAME}-FF7_1998-${_RELEASE_VERSION}, ${_RELEASE_NAME}-FF8_2000-${_RELEASE_VERSION}, ${_RELEASE_NAME}-Steam-${_RELEASE_VERSION}
    auth_token:
      secure: yG66EEKasiTmuCDPStbz0nVsvcETsQlnpDD2ScfNWUwT81kKfALCVFRTPMrp6R6E
    on:
      branch: master
      _IS_BUILD_CANARY: false
  # Deploy on each commit
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME}-v${appveyor_build_version}
    artifact: ${_RELEASE_NAME}-FF7_1998-${_RELEASE_VERSION}, ${_RELEASE_NAME}-FF8_2000-${_RELEASE_VERSION}, ${_RELEASE_NAME}-Steam-${_RELEASE_VERSION}
    prerelease: true
    force_update: true
    auth_token:
      secure: yG66EEKasiTmuCDPStbz0nVsvcETsQlnpDD2ScfNWUwT81kKfALCVFRTPMrp6R6E
    on:
      branch: master
      _IS_BUILD_CANARY: true
    description: |
      This is a canary build. Please be aware it may be prone to crashing and is NOT tested by anyone. Use this build AT YOUR OWN RISK!
